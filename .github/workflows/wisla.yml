name: Wisla Tickets Watch (PL fixed times)

on:
  schedule:
    # ---- CEST (UTC+2) — mar/paź (PL 08,11,14,17,20,23,04) ----
    - cron: "0 6 * * *"   # 08:00 PL
    - cron: "0 9 * * *"   # 11:00 PL
    - cron: "0 12 * * *"  # 14:00 PL
    - cron: "0 15 * * *"  # 17:00 PL
    - cron: "0 18 * * *"  # 20:00 PL
    - cron: "0 21 * * *"  # 23:00 PL
    - cron: "0 2 * * *"   # 04:00 PL

    # ---- CET (UTC+1) — lis/mar (PL 08,11,14,17,20,23,04) ----
    - cron: "0 7 * * *"   # 08:00 PL
    - cron: "0 10 * * *"  # 11:00 PL
    - cron: "0 13 * * *"  # 14:00 PL
    - cron: "0 16 * * *"  # 17:00 PL
    - cron: "0 19 * * *"  # 20:00 PL
    - cron: "0 22 * * *"  # 23:00 PL
    - cron: "0 3 * * *"   # 04:00 PL

  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: wisla-tickets
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest

    # Szybkie środowisko: Playwright + Chromium już w obrazie
    container:
      image: mcr.microsoft.com/playwright/python:v1.47.0-jammy

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: /root/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run scraper
        env:
          EVENT_ID: ${{ secrets.EVENT_ID }}
          OUTPUT_CSV: ticket_snapshots.csv
          ALERT_THRESHOLD: "1500"
          # TOTAL_CAPACITY: "33000"   # opcjonalnie
        run: python scrape_wisla.py

      - name: Show files after scraper
        run: |
          ls -la
          echo "---- CSV preview ----"
          head -n 5 ticket_snapshots.csv || true

      - name: Commit CSV (with rebase)
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH="${GITHUB_REF_NAME}"
          git add -A
          git commit -m "Update snapshots [skip ci]" || echo "No changes to commit"
          git fetch origin "${BRANCH}"
          git pull --rebase origin "${BRANCH}" || true
          git push origin "${BRANCH}" || git push --force-with-lease origin "${BRANCH}"
