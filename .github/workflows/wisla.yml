name: Wisla Tickets Watch (every 10 min)

on:
  schedule:
    - cron: "*/10 * * * *"   # co 10 minut (UTC)
  workflow_dispatch:

permissions:
  contents: write

# zapobiega konfliktom push przy równoległych uruchomieniach
concurrency:
  group: wisla-tickets
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0               # potrzebne do pull --rebase
          persist-credentials: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m playwright install --with-deps chromium

      - name: Run scraper
        env:
          EVENT_ID: ${{ secrets.EVENT_ID }}
          OUTPUT_CSV: ticket_snapshots.csv
          ALERT_THRESHOLD: "1500"
        run: python scrape_wisla.py

      - name: Show files after scraper
        run: |
          ls -la
          echo "---- CSV content ----"
          head -n 5 ticket_snapshots.csv || true

      - name: Commit CSV if changed
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH="${GITHUB_REF_NAME}"

          # Dodaj wszystkie zmiany
          git add -A
          git commit -m "Update snapshots [skip ci]" || echo "No changes to commit"

          # Zsynchronizuj z origin (gdyby ktoś coś dorzucił międzyczasie)
          git fetch origin "${BRANCH}"
          git pull --rebase origin "${BRANCH}" || true

          # Spróbuj push
          git push origin "${BRANCH}" || git push --force-with-lease origin "${BRANCH}"
